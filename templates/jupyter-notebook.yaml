apiVersion: template.openshift.io/v1
kind: Template
metadata:
  annotations:
    description: Template for Jupyter Notebook S2I images with persistent storage
      and webdav filesystem access.
    iconClass: icon-python
    openshift.io/display-name: Jupyter Notebook S2I images with Persistent Storage
    tags: python,jupyter,notebook
  name: jupyter-notebook-s2i
  namespace: openshift
objects:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      build: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    lookupPolicy:
      local: true
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      build: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:${APPLICATION_VERSION}
    source:
      contextDir: ${CONTEXT_DIR}
      git:
        ref: ${GIT_REFERENCE}
        uri: ${GIT_REPOSITORY_URL}
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: ${BUILDER_IMAGE}
          namespace: openshift
      type: Source
    triggers:
    - type: ConfigChange
    - type: ImageChange
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        automountServiceAccountToken: false
        containers:
        - env:
          - name: JUPYTER_NOTEBOOK_PASSWORD
            value: ${NOTEBOOK_PASSWORD}
          - name: JUPYTER_NOTEBOOK_INTERFACE
            value: ${NOTEBOOK_INTERFACE}
          - name: JUPYTER_ENABLE_WEBDAV
            value: "true"
          image: ${APPLICATION_NAME}:${APPLICATION_VERSION}
          name: notebook
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8081
            protocol: TCP
          resources:
            limits:
              memory: ${NOTEBOOK_MEMORY}
          volumeMounts:
          - mountPath: /opt/app-root
            name: data
            subPath: app-root
        initContainers:
        - command:
          - setup-volume.sh
          - /opt/app-root
          - /mnt/app-root
          image: ${APPLICATION_NAME}:${APPLICATION_VERSION}
          name: setup-volume
          resources:
            limits:
              memory: 256Mi
          volumeMounts:
          - mountPath: /mnt
            name: data
        volumes:
        - name: data
          persistentVolumeClaim:
            claimName: ${APPLICATION_NAME}-data
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - setup-volume
        - notebook
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:${APPLICATION_VERSION}
      type: ImageChange
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-data
  spec:
    accessModes:
    - ${PVC_ACCESS_MODE}
    resources:
      requests:
        storage: ${PVC_VOLUME_SIZE}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: 8081-tcp
      port: 8081
      protocol: TCP
      targetPort: 8081
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    host: ""
    port:
      targetPort: 8080-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: ${APPLICATION_NAME}
      weight: 100
parameters:
#
# ENV - Application
#
- name: APPLICATION_NAME
  required: true
  value: custom-notebook
- name: APPLICATION_VERSION
  required: true
  value: "latest"
#
# ENV - Jupyter Notebook
#
- name: NOTEBOOK_PASSWORD
  required: true
  value: notebook
- name: NOTEBOOK_INTERFACE
  value: classic
- name: NOTEBOOK_MEMORY
  required: true
  value: 512Mi
#
# ENV - Persistent Storage
#
- name: PVC_VOLUME_SIZE
  required: true
  value: 1Gi
- name: PVC_ACCESS_MODE
  required: true
  value: ReadWriteOnce
#
# ENV - Build
#
- name: BUILDER_IMAGE
  required: true
  value: s2i-minimal-notebook:3.6
- name: GIT_REPOSITORY_URL
  required: true
  value: http://gitlab.example.com/ocp4/jupyter-notebooks.git
- name: GIT_REFERENCE
  required: true
  value: master
- name: CONTEXT_DIR
  value: minimal-notebook

